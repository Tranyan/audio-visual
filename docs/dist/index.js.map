{"version":3,"file":"index.js","sources":["../../src/init.js"],"sourcesContent":["\r\nexport class initAudioVisualizer {\r\n    isInit = false;\r\n    analyser = null;\r\n\r\n    dataArray = [];\r\n    ctx = null;\r\n    canvasWidth = 0;\r\n    canvasHeight = 0;\r\n\r\n    colorStore = ['#00DBDE','#FC00FF','#7441FF','#08AEEA','#2AF598','#FF630D','#FFE53B','#FF2525','#F400FF'];\r\n    colors = [];\r\n\r\n    options = {\r\n        audioElement: null,\r\n        canvasElement: null,\r\n        type: 'bar',\r\n        fftSize: 512,//取值：2的指数\r\n        customHandle: null,\r\n        gradient: () => {},\r\n        maxValue: 256,\r\n    };\r\n\r\n    constructor(options) {\r\n        this.init(options);\r\n    }\r\n    init(options) {\r\n        const { canvasElement } = this.options = {...this.options,...options };\r\n        this.ctx = canvasElement.getContext('2d');\r\n        this.canvasWidth = canvasElement.width;\r\n        this.canvasHeight = canvasElement.height;\r\n        this.colorStore = options.colorStore || this.colorStore;\r\n        this.getColors();\r\n        this.start();\r\n        this.render();\r\n    }\r\n    start() {\r\n        const { audioElement, fftSize } = this.options;\r\n        audioElement.onplay = () => {\r\n            if (this.isInit) {\r\n                return;\r\n            }\r\n            // 1. 创建音频上下文\r\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            // 2. 创建音频源\r\n            const source = audioContext.createMediaElementSource(audioElement);\r\n            // 3. 创建分析器\r\n            this.analyser = audioContext.createAnalyser();\r\n            // 4. 设置分析器的大小\r\n            this.analyser.fftSize = fftSize;\r\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n            // 4. 连接分析器\r\n            source.connect(this.analyser);\r\n            // 5. 连接音频输出\r\n            this.analyser.connect(audioContext.destination);\r\n            this.isInit = true;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        requestAnimationFrame(this.render.bind(this))\r\n        const { type,customHandle } = this.options;\r\n        const { canvasWidth, canvasHeight, dataArray,isInit,ctx,analyser } = this;\r\n        //清空画布\r\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        if (!isInit) {\r\n            return;\r\n        }\r\n        // 获取频率数据\r\n        analyser.getByteFrequencyData(dataArray);\r\n        // 绘制图形\r\n        switch (type) {\r\n            case 'bar':\r\n                this.drawBar();\r\n                break;\r\n            case 'line':\r\n                this.drawLine();\r\n                break;\r\n            case 'circle':\r\n                this.drawCircle();\r\n                break;\r\n            case 'particle':\r\n                this.drawParticle();\r\n                break;\r\n            case 'custom':\r\n                customHandle({dataArray,ctx,canvasHeight,canvasWidth,});\r\n                break;\r\n            default:\r\n                this.drawBar();\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 绘制条形图\r\n    drawBar() {\r\n        const { dataArray,canvasWidth, canvasHeight,ctx } = this;\r\n        const originalDataArray = dataArray;\r\n        let arrLen = originalDataArray.length;\r\n        const data = new Array(arrLen);\r\n        for (let i = 0; i < arrLen / 2; i++) {\r\n            data[i] = data[arrLen - i - 1] = originalDataArray[arrLen / 2 - i]\r\n        }\r\n\r\n        ctx.strokeStyle = this.options.gradient({canvasWidth, canvasHeight,ctx}) || this.getLineGradient({canvasHeight,ctx,canvasWidth});\r\n\r\n        const len = data.length;\r\n        const lineWidth = this.options.lineWidth || canvasWidth / len;\r\n        ctx.lineWidth = lineWidth - 2;\r\n        ctx.lineCap = 'round';\r\n        let maxValue = this.options.maxValue || 255;\r\n        for (let i = 0; i < len; i++) {\r\n            const datai = data[i] / 255 * maxValue; //<256\r\n            if (!datai) {\r\n                continue;\r\n            }\r\n            const x = i * canvasWidth / len;\r\n            const y = canvasHeight - datai;\r\n            //画线\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, canvasHeight);\r\n            ctx.lineTo(x, y);\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    // 绘制线条\r\n    drawLine() {\r\n        const { dataArray,canvasWidth, canvasHeight,ctx } = this;\r\n        const originalDataArray = dataArray;\r\n        let arrLen = originalDataArray.length;\r\n        const data = new Array(arrLen);\r\n\r\n        //密度\r\n        for (let i = 0; i < arrLen / 2; i++) {\r\n            data[i] = data[arrLen - i - 1] = originalDataArray[arrLen / 2 - i]\r\n        }\r\n\r\n        let maxValue = this.options.maxValue || 255;\r\n        const len = data.length;\r\n        //间距\r\n        let space = canvasWidth / len;\r\n\r\n        let lineWidth = this.options.lineWidth || canvasWidth / len;\r\n        ctx.strokeStyle = this.options.gradient({canvasWidth, canvasHeight,ctx}) || this.getLineGradient({canvasHeight,ctx,canvasWidth});\r\n\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineCap = 'round';\r\n        // 开始路径  \r\n        ctx.beginPath();\r\n        // 移动到第一个控制点  \r\n        // ctx.moveTo(0, canvasHeight);\r\n        for (let i = 0; i < len; i++) {\r\n            const d = data[i] / 255 * maxValue;\r\n            const d2 = data[i + 1] / 255 * maxValue;\r\n            const x = i * space;\r\n            const y = canvasHeight  - d\r\n            const x2 = (i + 1) * space;\r\n            const y2 = canvasHeight - d2;\r\n            ctx.quadraticCurveTo(x, y, (x + x2) / 2, (y + y2) / 2);\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n    // 粒子\r\n    drawParticle() {\r\n        const { dataArray,canvasWidth, canvasHeight,ctx } = this;\r\n        const originalDataArray = dataArray;\r\n        let arrLen = originalDataArray.length;\r\n        const data = new Array(arrLen);\r\n        for (let i = 0; i < arrLen / 2; i++) {\r\n            data[i] = data[arrLen - i - 1] = originalDataArray[arrLen / 2 - i]\r\n        }\r\n\r\n        ctx.fillStyle = this.options.gradient({canvasWidth, canvasHeight,ctx}) || this.getLineGradient({canvasHeight,ctx,canvasWidth});\r\n\r\n        const len = data.length;\r\n        const particleSize = this.options.particleSize || canvasWidth / len;\r\n        let maxValue = this.options.maxValue || 255;\r\n        for (let i = 0; i < len; i++) {\r\n            const datai = data[i] / 255 * maxValue; //<256\r\n            if (!datai) {\r\n                continue;\r\n            }\r\n            const x = i * canvasWidth / len;\r\n            const y = canvasHeight - datai;\r\n            //画圆\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, particleSize, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n           \r\n        }\r\n    }\r\n    // 绘制圆形\r\n    drawCircle(){\r\n        const { dataArray,canvasWidth, canvasHeight,ctx } = this;\r\n        const originalDataArray = dataArray;\r\n        let arrLen = originalDataArray.length;\r\n        const data = new Array(arrLen);\r\n\r\n         //密度\r\n         for (let i = 0; i < arrLen / 2; i++) {\r\n             data[i] = data[arrLen - i - 1] = originalDataArray[i] / 255 * 200\r\n         }\r\n         //中心点\r\n        const center = {\r\n            x: canvasWidth / 2,\r\n            y: canvasHeight / 2\r\n        }\r\n        //半径\r\n        // const radius = data[0] / 255 * 200; // 使内圆变换\r\n        const radius = this.options.innerRadius || 100;\r\n        let maxValue = this.options.maxValue || 255;\r\n\r\n        //圆周长\r\n        const circumference = 2 * Math.PI * radius;\r\n        const len = data.length;\r\n        //坐标\r\n       \r\n        ctx.lineCap = 'round';\r\n        ctx.strokeStyle = this.options.gradient({canvasWidth, canvasHeight,ctx}) || this.getRadialGradient({canvasHeight,ctx,canvasWidth,maxValue,radius});\r\n\r\n        const angle = Math.PI * 2 / len;\r\n\r\n        const barWidth = circumference / len;\r\n        ctx.lineWidth = barWidth;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const x = center.x + Math.sin(i * angle + Math.PI / 2) * radius;\r\n            const y = center.y + Math.cos(i * angle + Math.PI / 2) * radius;\r\n\r\n            const x2 = center.x + Math.sin(i * angle + Math.PI / 2) * (radius + data[i] / 255 * maxValue);\r\n            const y2 = center.y + Math.cos(i * angle + Math.PI / 2) * (radius + data[i] / 255 * maxValue);\r\n\r\n            //画线\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    //获取线性渐变\r\n    getLineGradient({canvasHeight, ctx, canvasWidth}){\r\n         const gradient = ctx.createLinearGradient(0, 0, 0, canvasWidth);\r\n         gradient.addColorStop(0, this.colors[0]);\r\n         gradient.addColorStop(0.5, this.colors[1]);\r\n         gradient.addColorStop(1, this.colors[2]);\r\n         return gradient;\r\n    }\r\n\r\n\r\n    //获取径向渐变\r\n    getRadialGradient({canvasHeight, ctx, canvasWidth,radius,maxValue}){    \r\n        const gradient = ctx.createRadialGradient(canvasWidth / 2, canvasHeight / 2, radius,canvasWidth / 2, canvasHeight / 2,radius+maxValue);\r\n        gradient.addColorStop(0, this.colors[0]);\r\n        gradient.addColorStop(0.5, this.colors[1]);\r\n        gradient.addColorStop(1, this.colors[2]);\r\n        return gradient;\r\n    }\r\n    //从colorStore中随机取出3个颜色,放入colors中\r\n    getColors(){\r\n        for(let i = 0; i < 3; i++){\r\n            this.colors[i] = this.colorStore[Math.floor(Math.random() * this.colorStore.length)]\r\n        }\r\n    }\r\n\r\n    //设置options\r\n    setOptions(options){\r\n        this.options = {...this.options,...options }\r\n    }\r\n}"],"names":["initAudioVisualizer","options","_classCallCheck","_defineProperty","audioElement","canvasElement","type","fftSize","customHandle","gradient","maxValue","init","_createClass","key","value","_this$options","_objectSpread","ctx","getContext","canvasWidth","width","canvasHeight","height","colorStore","getColors","start","render","_this","_this$options2","onplay","isInit","audioContext","window","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","connect","destination","requestAnimationFrame","bind","_this$options3","clearRect","getByteFrequencyData","drawBar","drawLine","drawCircle","drawParticle","originalDataArray","arrLen","length","data","Array","i","strokeStyle","getLineGradient","len","lineWidth","lineCap","datai","x","y","beginPath","moveTo","lineTo","stroke","space","lineJoin","d","d2","x2","y2","quadraticCurveTo","fillStyle","particleSize","arc","Math","PI","fill","center","radius","innerRadius","circumference","getRadialGradient","angle","barWidth","sin","cos","_ref","createLinearGradient","addColorStop","colors","_ref2","createRadialGradient","floor","random","setOptions"],"mappings":"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"}